name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: Dev

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      DEBUG: '1'
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt
        pip install pytest pytest-django coverage codecov flake8

    - name: Lint code
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Wait for Postgres
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for Postgres..."
          sleep 1
        done
          
    - name: Run migrations and tests with coverage
      env:
        DB_NAME: ${{ secrets.POSTGRES_DB }}
        DB_USER: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: localhost
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        cd project_chia
        python manage.py migrate
        coverage run -m pytest
        coverage report
        coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./project_chia/coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        
  build:
    name: Build ${{ matrix.os }} Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    environment: Dev
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python_version: ["3.12"]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
        - uses: actions/checkout@v4
        - name: Setup Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python_version }}
            architecture: x64
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r dev-requirements.txt
            pip install flake8
        - name: Look for major issues with flake8
          run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        - name: Make sure Python code is all compilable
          run: |
            python -m compileall azureproject -f
            python -m compileall restaurant_review -f
        - name: Run Django server
          run: |
            python ./project_chia/manage.py migrate
            python ./project_chia/manage.py runserver &
          env:
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
